Write-Host " V√©rification de l'environnement pour MeetMind..." -ForegroundColor Cyan

# Fonction pour v√©rifier si une commande existe
function CommandExists {
    param (
        [string]$Command
    )
    $null -ne (Get-Command $Command -ErrorAction SilentlyContinue)
}

# V√©rifier Python
if (CommandExists -Command "python") {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python d√©tect√© : $pythonVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå Python non d√©tect√© !" -ForegroundColor Red
}

# V√©rifier Pip
if (CommandExists -Command "pip") {
    $pipVersion = pip --version 2>&1
    Write-Host "‚úÖ Pip d√©tect√© : $pipVersion" -ForegroundColor Green
} else {
    Write-Host "‚ùå Pip non d√©tect√© !" -ForegroundColor Red
}

# V√©rifier FFMPEG
if (CommandExists -Command "ffmpeg") {
    $ffmpegVersion = ffmpeg -version | Select-String "ffmpeg version"
    Write-Host "‚úÖ FFMPEG d√©tect√© : $($ffmpegVersion.Line)" -ForegroundColor Green
} else {
    Write-Host "‚ùå FFMPEG non d√©tect√© !" -ForegroundColor Red
}

# V√©rifier installation FastAPI
try {
    $fastapiVersion = pip show fastapi 2>&1
    if ($fastapiVersion -match "Name: fastapi") {
        Write-Host "‚úÖ FastAPI est install√©." -ForegroundColor Green
    } else {
        Write-Host "‚ùå FastAPI n'est pas install√© !" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå FastAPI non d√©tect√© !" -ForegroundColor Red
}

# V√©rifier installation Uvicorn
try {
    $uvicornVersion = pip show uvicorn 2>&1
    if ($uvicornVersion -match "Name: uvicorn") {
        Write-Host "‚úÖ Uvicorn est install√©." -ForegroundColor Green
    } else {
        Write-Host "‚ùå Uvicorn n'est pas install√© !" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Uvicorn non d√©tect√© !" -ForegroundColor Red
}

Write-Host "`nüéØ V√©rification termin√©e." -ForegroundColor Yellow
